## Extended properties for deployment in DEV mode.
# Dev mode means the game is deployed natively, not in a docker container. Therefore URLs have to be reference plain
# IPs, not docker-provided network identifiers. The game supposed to run on the same machine as the lobby service.

## DEV specific network properties

## Location of Xox Service, as registered at Lobby-Service
#gameservice.location=http://127.0.0.1:4244/xox
#
## Location of the Lobby-Service
#lobbyservice.location=http://127.0.0.1:4242
#
### Debug
## Registration can be skipped for debug purposes.
#debug.skip.registration=false


## Own service properties
#
# Enable DEV/PROD specific settings
spring.profiles.active=dev
# Name, as game will be referenced by Lobby-Service
gameService.name=splendor

# Name, as game will be displayed by Lobby-Service (Use \u0020 for whitespaces)
gameService.displayName=Splendor

# Credentials for OAuth token retrieval (required for registration at Lobby-Service)
game.username=Splendor_base
game.password=a123_A123

## Network properties - Some settings are overridden by extended dev/prod properties.
#
# Own port
server.port=9127
#
# Own context path, should be identical to lowercase gameservice.name with leading "/"
server.servlet.context-path=/splendor
# Board resource long-poll timeout
long.poll.timeout=30000

# Flag to enable retry if registration at lobbyservice fails (only a single retry is performed if set to true)
registration.retry=true
# Seconds to wait before attempting a registration retry (only has an effect if previous flag is set to true)
registration.retry.timer=45

## Tell Spring not to spam the console
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=ERROR
spring.main.banner-mode=off

# Enable thymeleaf resolving of css / js
spring.resources.add-mappings=true


